package container;

import javax.swing.*;
import java.awt.*;
 
import java.io.IOException;
import java.io.PrintWriter;
import java.io.BufferedReader;
import java.io.InputStreamReader;

import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.net.ServerSocket;
import java.net.Socket;
import java.util.Date;
 

/*
 * Para que el programa funcione es necesario contar con un array que almacene todos los sitios
 * o direcciones ip que se desean comprobar
 * */


public class Principal {
	///establecemos los tiempos de ping
	
	public int tbusqueda = 15 ; /// minutos de delay para busqueda 

	public static void main(String[] args) throws IOException {
		//
		Principal prm= new Principal();

		prm.home();
			
		//prm.capturaDominio();
		
	}
	
	
	/*
	 * Metodos graficos
	 * */
	
	
	public void home(){
		JFrame home = new JFrame("Herramientas de Red");
		home.setSize(400,300);
		home.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		home.setVisible(true);

		
	}
	
	
	
	
	/*
	 * Establecemos los metodos de verificacion de dominios  
	 * */
	
	
	
	public Integer verf2(String domain){
		int verfs=0;
		try{
			InetAddress[] addresses = InetAddress.getAllByName(domain);
			for (InetAddress address : addresses) 
			{
				if (address.isReachable(10000)){   
					verfs=1;
			    }else{
			    	verfs=0;
			    }
			}
			
		}catch(IOException ex){
			verfs = 0; ///sitio sin linea
		}				
		return verfs;		
	}
	
	
	
	public void capturaDominio() throws IOException {
		String nombre;		
		nombre = JOptionPane.showInputDialog("Dominio a verificar");
		////verificamos si el dominio/ip tiene conexion
		int a = verf2(nombre);
		if(a>0) {
			JOptionPane.showMessageDialog(null, nombre+" En linea");
			
		}else {
			JOptionPane.showMessageDialog(null, nombre+" FUERA DE LINEA","Warning",JOptionPane.ERROR_MESSAGE);
		}
	}
		
		
			
		

	
	
	///metodo para verificar un dominio o ip determinado
		

}
